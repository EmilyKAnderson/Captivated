
.logo {
	position: relative;
	width: 190px;
	display: flex;
	z-index: 9997;
	height: 100%;

	@media #{$media-lg} {
		width: 240px;
	}
}

.user-icon {
	display: flex;
	stroke: lighten($grayDark,15%);
	fill: lighten($grayDark,15%);
	stroke-width: 0px;
	position: relative;
	backface-visibility: visible;
	height: 55px;
	@include transition();
	padding: $space/2;
}

.icon {
	display: flex;
	stroke: #fff;
	fill: #fff;
	stroke-width: 0px;
	position: relative;
	backface-visibility: visible;
	opacity: .9;
	@include transition();
	width: 28px;
	min-width: 28px;
	border-radius: $btnBorderRadius;
	padding: $space/4;
	background-image: linear-gradient(-30deg, #00A1C6 0%,  #44c4e7 80%);

	@media #{$media-med} {
		width: 30px;
		min-width: 30px;
		height: auto;
		padding: $space/3;
	}
}

.play {
	fill: $tertLight;
	width: 24px;
	height: 24px;
}



//////////////////////////////////////////
// Pricing icons
//////////////////////////////////////////
.pricing-icon {
		stroke: $secLight;
		stroke-width: 0px;
		width: 100%;
		height: 100%;
		max-width:60%;
		border-color: #secDark;
		fill: $secLight;
		z-index: 0;
		opacity: .7;
}


//////////////////////////////////////////
//hamburger
//////////////////////////////////////////
// SOCIAL ICONS

	.social-icon {
		margin-bottom: 0;
		margin-right: $space;
		fill: $secLight;
		width: 25px;

	  @media #{$media-med} {
			margin-top: $space/2;
		}

		 &:hover svg {
		 	fill: $linkLight;
		 }
	}



	//////////////////////////////////////////
	//hamburger
	//////////////////////////////////////////
	$hamburger-padding-x                       : 15px !default;
	$hamburger-padding-y                       : 15px !default;
	$hamburger-layer-width                     : 40px !default;
	$hamburger-layer-height                    : 4px !default;
	$hamburger-layer-spacing                   : 6px !default;
	$hamburger-layer-color                     : $secLight !default;
	$hamburger-layer-border-radius             : 1px !default;
	$hamburger-hover-opacity                   : 0.7 !default;
	$hamburger-hover-transition-duration       : 0.15s !default;
	$hamburger-hover-transition-timing-function: linear !default;

	// To use CSS filters as the hover effect instead of opacity,
	// set $hamburger-hover-use-filter as true and
	// change the value of $hamburger-hover-filter accordingly.
	$hamburger-hover-use-filter: false !default;
	$hamburger-hover-filter    : opacity(50%) !default;

	.hamburger {
	  padding: $hamburger-padding-y $hamburger-padding-x;
	  display: inline-block;
	  cursor: pointer;

	  transition-property: opacity, filter;
	  transition-duration: $hamburger-hover-transition-duration;
	  transition-timing-function: $hamburger-hover-transition-timing-function;

	  // Normalize (<button>)
	  font: inherit;
	  color: inherit;
	  text-transform: none;
	  background-color: transparent;
	  border: 0;
	  margin: 0;
	  overflow: visible;

	  &:hover {
	    @if $hamburger-hover-use-filter == true {
	      filter: $hamburger-hover-filter;
	    }
	    @else {
	      opacity: $hamburger-hover-opacity;
	    }
	  }
	}

	.hamburger-box {
	  width: $hamburger-layer-width;
	  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
	  display: inline-block;
	  position: relative;
	}

	.hamburger-inner {
	  display: block;
	  top: 50%;
	  margin-top: $hamburger-layer-height / -2;

	  &,
	  &::before,
	  &::after {
	    width: $hamburger-layer-width;
	    height: $hamburger-layer-height;
	    background-color: $hamburger-layer-color;
	    border-radius: $hamburger-layer-border-radius;
	    position: absolute;
	    transition-property: transform;
	    transition-duration: 0.15s;
	    transition-timing-function: ease;
	  }

	  &::before,
	  &::after {
	    content: "";
	    display: block;
	  }

	  &::before {
	    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
	  }

	  &::after {
	    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
	  }
	}

	/*
	 * Spin
	 */
	.hamburger--spin {
		.hamburger-inner {
			transition-duration: 0.22s;
			transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

			&::before {
				transition: top 0.1s 0.25s ease-in,
										opacity 0.1s ease-in;
			}

			&::after {
				transition: bottom 0.1s 0.25s ease-in,
										transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
			}
		}

		&.is-active {
			.hamburger-inner {
				transform: rotate(225deg);
				transition-delay: 0.12s;
				transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

				&::before {
					top: 0;
					opacity: 0;
					transition: top 0.1s ease-out,
											opacity 0.1s 0.12s ease-out;
				}

				&::after {
					bottom: 0;
					transform: rotate(-90deg);
					transition: bottom 0.1s ease-out,
											transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
				}
			}
		}
	}
